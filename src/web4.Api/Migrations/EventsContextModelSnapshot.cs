// <auto-generated />
using System;
using System.Collections.Generic;
using Events.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Events.Api.Migrations
{
    [DbContext(typeof(EventsContext))]
    partial class EventsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Events.Api.Entites.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Events.Api.Entites.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("CategorieIds")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<List<string>>("Categories")
                        .HasColumnType("text[]");

                    b.Property<DateTime>("DateDeFin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomOrganisateur")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("ParticipationIds")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("Prix")
                        .HasColumnType("integer");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VilleId")
                        .HasColumnType("integer");

                    b.Property<string>("VilleNom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("VilleId");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("Events.Api.Entites.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EstValide")
                        .HasColumnType("boolean");

                    b.Property<int>("EvenementID")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NombrePlaces")
                        .HasColumnType("integer");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EvenementID");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("Events.Api.Entites.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Region")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("Events.Api.Entites.Evenement", b =>
                {
                    b.HasOne("Events.Api.Entites.Ville", null)
                        .WithMany("Evenements")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Events.Api.Entites.Participation", b =>
                {
                    b.HasOne("Events.Api.Entites.Evenement", "Evenement")
                        .WithMany("Participations")
                        .HasForeignKey("EvenementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");
                });

            modelBuilder.Entity("Events.Api.Entites.Evenement", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("Events.Api.Entites.Ville", b =>
                {
                    b.Navigation("Evenements");
                });
#pragma warning restore 612, 618
        }
    }
}
